\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{k+kn}{package} \PYGdefault{n+nn}{at.fh.ooe.swe.test.api}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.ArrayList}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.List}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.function.IntConsumer}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.stream.IntStream}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.apache.log4j.Level}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.apache.log4j.Logger}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.junit.ClassRule}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.junit.Rule}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.junit.rules.TestWatcher}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.junit.test.suite.watcher.LoggingTestClassWatcher}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.junit.test.suite.watcher.LoggingTestInvocationWatcher}\PYGdefault{o}{;}

\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{ * This is the base test which provides common resources for the test}
\PYGdefault{c+cm}{ * implementation.}
\PYGdefault{c+cm}{ * }
\PYGdefault{c+cm}{ * @author Thomas Herzog \PYGdefaultZlt{}thomas.herzog@students.fh\PYGdefaultZhy{}hagenberg.at\PYGdefaultZgt{}}
\PYGdefault{c+cm}{ * @date Apr 26, 2015}
\PYGdefault{c+cm}{ */}
\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{abstract} \PYGdefault{k+kd}{class} \PYGdefault{n+nc}{AbstractTest} \PYGdefault{o}{\PYGdefaultZob{}}

	\PYGdefault{k+kd}{protected} \PYGdefault{k+kd}{final} \PYGdefault{n}{Logger} \PYGdefault{n}{log}\PYGdefault{o}{;}
	\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{	 * This watcher watches the invocation of an Test class.}
\PYGdefault{c+cm}{	 */}
	\PYGdefault{n+nd}{@Rule}
	\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{final} \PYGdefault{n}{TestWatcher} \PYGdefault{n}{methodInvocationLogger} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{LoggingTestInvocationWatcher}\PYGdefault{o}{(}\PYGdefault{n}{Level}\PYGdefault{o}{.}\PYGdefault{n+na}{INFO}\PYGdefault{o}{);}

	\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{	 * This watcher is used for logging the test execution.}
\PYGdefault{c+cm}{	 */}
	\PYGdefault{n+nd}{@ClassRule}
	\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{static} \PYGdefault{n}{TestWatcher} \PYGdefault{n}{testClassInvocationLogger} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{LoggingTestClassWatcher}\PYGdefault{o}{(}\PYGdefault{n}{Level}\PYGdefault{o}{.}\PYGdefault{n+na}{INFO}\PYGdefault{o}{);}

	\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{	 * Default constructor which initializes the logger with the current test}
\PYGdefault{c+cm}{	 * class.}
\PYGdefault{c+cm}{	 */}
	\PYGdefault{k+kd}{public} \PYGdefault{n+nf}{AbstractTest}\PYGdefault{o}{()} \PYGdefault{o}{\PYGdefaultZob{}}
		\PYGdefault{k+kd}{super}\PYGdefault{o}{();}
		\PYGdefault{n}{log} \PYGdefault{o}{=} \PYGdefault{n}{Logger}\PYGdefault{o}{.}\PYGdefault{n+na}{getLogger}\PYGdefault{o}{(}\PYGdefault{k}{this}\PYGdefault{o}{.}\PYGdefault{n+na}{getClass}\PYGdefault{o}{());}
	\PYGdefault{o}{\PYGdefaultZcb{}}

	\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{	 * Creates a container with the given size and sets integer values i in}
\PYGdefault{c+cm}{	 * order from 1 to size.\PYGdefaultZlt{}br\PYGdefaultZgt{}}
\PYGdefault{c+cm}{	 * \PYGdefaultZlt{}b\PYGdefaultZgt{}This container will contain no null element.\PYGdefaultZlt{}b\PYGdefaultZgt{}}
\PYGdefault{c+cm}{	 * }
\PYGdefault{c+cm}{	 * @param size}
\PYGdefault{c+cm}{	 *            the size of the container}
\PYGdefault{c+cm}{	 * @return the created container}
\PYGdefault{c+cm}{	 */}
	\PYGdefault{k+kd}{protected} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n+nf}{createContainer}\PYGdefault{o}{(}\PYGdefault{k+kd}{final} \PYGdefault{k+kt}{int} \PYGdefault{n}{size}\PYGdefault{o}{)} \PYGdefault{o}{\PYGdefaultZob{}}
		\PYGdefault{k+kd}{final} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{container} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{ArrayList}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{n}{size}\PYGdefault{o}{);}
		\PYGdefault{n}{IntStream}\PYGdefault{o}{.}\PYGdefault{n+na}{range}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{1}\PYGdefault{o}{,} \PYGdefault{o}{(}\PYGdefault{n}{size} \PYGdefault{o}{+} \PYGdefault{l+m+mi}{1}\PYGdefault{o}{))}
					\PYGdefault{o}{.}\PYGdefault{n+na}{forEachOrdered}\PYGdefault{o}{(}\PYGdefault{k}{new} \PYGdefault{n}{IntConsumer}\PYGdefault{o}{()} \PYGdefault{o}{\PYGdefaultZob{}}
						\PYGdefault{n+nd}{@Override}
						\PYGdefault{k+kd}{public} \PYGdefault{k+kt}{void} \PYGdefault{n+nf}{accept}\PYGdefault{o}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{value}\PYGdefault{o}{)} \PYGdefault{o}{\PYGdefaultZob{}}
							\PYGdefault{n}{container}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{n}{value}\PYGdefault{o}{);}
						\PYGdefault{o}{\PYGdefaultZcb{}}
					\PYGdefault{o}{\PYGdefaultZcb{});}

		\PYGdefault{k}{return} \PYGdefault{n}{container}\PYGdefault{o}{;}
	\PYGdefault{o}{\PYGdefaultZcb{}}
\PYGdefault{o}{\PYGdefaultZcb{}}
\end{Verbatim}
