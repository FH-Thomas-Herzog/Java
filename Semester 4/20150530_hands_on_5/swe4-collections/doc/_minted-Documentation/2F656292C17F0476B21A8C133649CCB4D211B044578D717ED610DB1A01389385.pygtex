\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{k+kn}{package} \PYGdefault{n+nn}{at.fh.ooe.swe4.test.collections.binarySearchTreeSet.api}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.ArrayList}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.List}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.function.IntConsumer}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.stream.IntStream}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.collections.impl.BinarySearchTreeSet}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.collections.model.BinaryTreeNode}\PYGdefault{o}{;}

\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{ * This class provides the test data for the \PYGdefaultZob{}@link BinarySearchTreeSet\PYGdefaultZcb{} tests.}
\PYGdefault{c+cm}{ * }
\PYGdefault{c+cm}{ * @author Thomas Herzog \PYGdefaultZlt{}thomas.herzog@students.fh\PYGdefaultZhy{}hagenberg.at\PYGdefaultZgt{}}
\PYGdefault{c+cm}{ * @date May 27, 2015}
\PYGdefault{c+cm}{ */}
\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{class} \PYGdefault{n+nc}{BinarySearchTreeTestDataProducer} \PYGdefault{o}{\PYGdefaultZob{}}

	\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{	 * The provided test cases.}
\PYGdefault{c+cm}{	 * }
\PYGdefault{c+cm}{	 * @author Thomas Herzog \PYGdefaultZlt{}thomas.herzog@students.fh\PYGdefaultZhy{}hagenberg.at\PYGdefaultZgt{}}
\PYGdefault{c+cm}{	 * @date May 27, 2015}
\PYGdefault{c+cm}{	 */}
	\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{static} \PYGdefault{k+kd}{enum} \PYGdefault{n}{TestCase} \PYGdefault{o}{\PYGdefaultZob{}}
		\PYGdefault{n}{TREE\PYGdefaultZus{}1}\PYGdefault{o}{,} \PYGdefault{n}{TREE\PYGdefaultZus{}2}\PYGdefault{o}{;}
	\PYGdefault{o}{\PYGdefaultZcb{}}

	\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{	 * The model for holding the test data for a specific test case.}
\PYGdefault{c+cm}{	 * }
\PYGdefault{c+cm}{	 * @author Thomas Herzog \PYGdefaultZlt{}thomas.herzog@students.fh\PYGdefaultZhy{}hagenberg.at\PYGdefaultZgt{}}
\PYGdefault{c+cm}{	 * @date May 27, 2015}
\PYGdefault{c+cm}{	 */}
	\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{static} \PYGdefault{k+kd}{class} \PYGdefault{n+nc}{TestData} \PYGdefault{o}{\PYGdefaultZob{}}

		\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{final} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{orderedValues}\PYGdefault{o}{;}
		\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{final} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{;}
		\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{final} \PYGdefault{k+kt}{int} \PYGdefault{n}{levels}\PYGdefault{o}{;}
		\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{root}\PYGdefault{o}{;}

		\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{		 * @param orderedValues}
\PYGdefault{c+cm}{		 * @param insertOrderedValues}
\PYGdefault{c+cm}{		 * @param root}
\PYGdefault{c+cm}{		 * @param levels}
\PYGdefault{c+cm}{		 */}
		\PYGdefault{k+kd}{public} \PYGdefault{n+nf}{TestData}\PYGdefault{o}{(}\PYGdefault{k+kd}{final} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{orderedValues}\PYGdefault{o}{,}
				\PYGdefault{k+kd}{final} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{,}
				\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{root}\PYGdefault{o}{,} \PYGdefault{k+kd}{final} \PYGdefault{k+kt}{int} \PYGdefault{n}{levels}\PYGdefault{o}{)} \PYGdefault{o}{\PYGdefaultZob{}}
			\PYGdefault{k+kd}{super}\PYGdefault{o}{();}
			\PYGdefault{k}{this}\PYGdefault{o}{.}\PYGdefault{n+na}{orderedValues} \PYGdefault{o}{=} \PYGdefault{n}{orderedValues}\PYGdefault{o}{;}
			\PYGdefault{k}{this}\PYGdefault{o}{.}\PYGdefault{n+na}{insertOrderedValues} \PYGdefault{o}{=} \PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{;}
			\PYGdefault{k}{this}\PYGdefault{o}{.}\PYGdefault{n+na}{root} \PYGdefault{o}{=} \PYGdefault{n}{root}\PYGdefault{o}{;}
			\PYGdefault{k}{this}\PYGdefault{o}{.}\PYGdefault{n+na}{levels} \PYGdefault{o}{=} \PYGdefault{n}{levels}\PYGdefault{o}{;}
		\PYGdefault{o}{\PYGdefaultZcb{}}
	\PYGdefault{o}{\PYGdefaultZcb{}}

	\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{	 * Creates the test model for the given test case.}
\PYGdefault{c+cm}{	 * }
\PYGdefault{c+cm}{	 * @param testCase}
\PYGdefault{c+cm}{	 *            the test case to create test data for}
\PYGdefault{c+cm}{	 * @return the model holding the test data for this test case}
\PYGdefault{c+cm}{	 */}
	\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{static} \PYGdefault{n}{TestData} \PYGdefault{n+nf}{createTestData}\PYGdefault{o}{(}\PYGdefault{k+kd}{final} \PYGdefault{n}{TestCase} \PYGdefault{n}{testCase}\PYGdefault{o}{)} \PYGdefault{o}{\PYGdefaultZob{}}
		\PYGdefault{k+kd}{final} \PYGdefault{k+kt}{int} \PYGdefault{n}{size} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{7}\PYGdefault{o}{;}
		\PYGdefault{k+kd}{final} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{orderedValues} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{ArrayList}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{n}{size}\PYGdefault{o}{);}
		\PYGdefault{k+kd}{final} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{insertOrderedValues} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{ArrayList}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{n}{size}\PYGdefault{o}{);}
		\PYGdefault{n}{IntStream}\PYGdefault{o}{.}\PYGdefault{n+na}{range}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{1}\PYGdefault{o}{,} \PYGdefault{l+m+mi}{8}\PYGdefault{o}{).}\PYGdefault{n+na}{forEachOrdered}\PYGdefault{o}{(}\PYGdefault{k}{new} \PYGdefault{n}{IntConsumer}\PYGdefault{o}{()} \PYGdefault{o}{\PYGdefaultZob{}}

			\PYGdefault{n+nd}{@Override}
			\PYGdefault{k+kd}{public} \PYGdefault{k+kt}{void} \PYGdefault{n+nf}{accept}\PYGdefault{o}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{value}\PYGdefault{o}{)} \PYGdefault{o}{\PYGdefaultZob{}}
				\PYGdefault{n}{orderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{n}{value}\PYGdefault{o}{);}

			\PYGdefault{o}{\PYGdefaultZcb{}}
		\PYGdefault{o}{\PYGdefaultZcb{});}
		\PYGdefault{k}{switch} \PYGdefault{o}{(}\PYGdefault{n}{testCase}\PYGdefault{o}{)} \PYGdefault{o}{\PYGdefaultZob{}}
		\PYGdefault{k}{case} \PYGdefault{n}{TREE\PYGdefaultZus{}1}\PYGdefault{o}{:}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{} Test should be able to walk this tree}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 5 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 4 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 6 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 2 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 7 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{} 1 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 3 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{l1} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{1}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{l2} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{3}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{l1l2} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{2}\PYGdefault{o}{,}
					\PYGdefault{n}{l1}\PYGdefault{o}{,} \PYGdefault{n}{l2}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{l0} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{4}\PYGdefault{o}{,}
					\PYGdefault{n}{l1l2}\PYGdefault{o}{,} \PYGdefault{k+kc}{null}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{r1} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{7}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{r0} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{6}\PYGdefault{o}{,}
					\PYGdefault{k+kc}{null}\PYGdefault{o}{,} \PYGdefault{n}{r1}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{root} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{5}\PYGdefault{o}{,}
					\PYGdefault{n}{l0}\PYGdefault{o}{,} \PYGdefault{n}{r0}\PYGdefault{o}{);}

			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{5}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{4}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{6}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{7}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{2}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{1}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{3}\PYGdefault{o}{);}
			\PYGdefault{k}{return} \PYGdefault{k}{new} \PYGdefault{n}{TestData}\PYGdefault{o}{(}\PYGdefault{n}{orderedValues}\PYGdefault{o}{,} \PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{,} \PYGdefault{n}{root}\PYGdefault{o}{,} \PYGdefault{l+m+mi}{4}\PYGdefault{o}{);}
		\PYGdefault{k}{case} \PYGdefault{n}{TREE\PYGdefaultZus{}2}\PYGdefault{o}{:}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{} Example in order}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{} Test should be able to walk this tree}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 4 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 2 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 6 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 1 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}3\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}5\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{} 7 \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{\PYGdefaultZus{}l1} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{1}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{\PYGdefaultZus{}l2} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{3}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{\PYGdefaultZus{}l1l2} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}
					\PYGdefault{l+m+mi}{2}\PYGdefault{o}{,} \PYGdefault{n}{\PYGdefaultZus{}l1}\PYGdefault{o}{,} \PYGdefault{n}{\PYGdefaultZus{}l2}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{\PYGdefaultZus{}r1} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{5}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{\PYGdefaultZus{}r2} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}\PYGdefault{l+m+mi}{7}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{\PYGdefaultZus{}r1r2} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}
					\PYGdefault{l+m+mi}{6}\PYGdefault{o}{,} \PYGdefault{n}{\PYGdefaultZus{}r1}\PYGdefault{o}{,} \PYGdefault{n}{\PYGdefaultZus{}r2}\PYGdefault{o}{);}
			\PYGdefault{k+kd}{final} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{\PYGdefaultZus{}root} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinaryTreeNode}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}
					\PYGdefault{l+m+mi}{4}\PYGdefault{o}{,} \PYGdefault{n}{\PYGdefaultZus{}l1l2}\PYGdefault{o}{,} \PYGdefault{n}{\PYGdefaultZus{}r1r2}\PYGdefault{o}{);}

			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{4}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{6}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{5}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{7}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{2}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{3}\PYGdefault{o}{);}
			\PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{add}\PYGdefault{o}{(}\PYGdefault{l+m+mi}{1}\PYGdefault{o}{);}

			\PYGdefault{k}{return} \PYGdefault{k}{new} \PYGdefault{n}{TestData}\PYGdefault{o}{(}\PYGdefault{n}{orderedValues}\PYGdefault{o}{,} \PYGdefault{n}{insertOrderedValues}\PYGdefault{o}{,} \PYGdefault{n}{\PYGdefaultZus{}root}\PYGdefault{o}{,} \PYGdefault{l+m+mi}{3}\PYGdefault{o}{);}
		\PYGdefault{k}{default}\PYGdefault{o}{:}
			\PYGdefault{k}{return} \PYGdefault{k+kc}{null}\PYGdefault{o}{;}
		\PYGdefault{o}{\PYGdefaultZcb{}}
	\PYGdefault{o}{\PYGdefaultZcb{}}
\PYGdefault{o}{\PYGdefaultZcb{}}
\end{Verbatim}
