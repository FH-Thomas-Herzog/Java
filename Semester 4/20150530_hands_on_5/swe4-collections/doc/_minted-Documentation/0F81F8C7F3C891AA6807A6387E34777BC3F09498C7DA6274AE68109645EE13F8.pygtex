\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{k+kn}{package} \PYGdefault{n+nn}{at.fh.ooe.swe4.test.collections.binarySearchTreeSet.impl.parametrized}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{static} \PYGdefault{n}{org}\PYGdefault{o}{.}\PYGdefault{n+na}{junit}\PYGdefault{o}{.}\PYGdefault{n+na}{Assert}\PYGdefault{o}{.}\PYGdefault{n+na}{assertEquals}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.Arrays}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.Iterator}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{java.util.List}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.junit.Test}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.junit.runner.RunWith}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.junit.runners.Parameterized}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.junit.runners.Parameterized.Parameter}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{org.junit.runners.Parameterized.Parameters}\PYGdefault{o}{;}

\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.collections.impl.BinarySearchTreeSet.BinarySearchTreeIterator}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.junit.test.suite.watcher.AbstractConsoleLoggingTest}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.test.collections.binarySearchTreeSet.api.BinarySearchTreeTestDataProducer}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.test.collections.binarySearchTreeSet.api.BinarySearchTreeTestDataProducer.TestCase}\PYGdefault{o}{;}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{at.fh.ooe.swe4.test.collections.binarySearchTreeSet.api.BinarySearchTreeTestDataProducer.TestData}\PYGdefault{o}{;}

\PYGdefault{c+cm}{/**}
\PYGdefault{c+cm}{ * This test class is a parameterized test for the}
\PYGdefault{c+cm}{ * \PYGdefaultZob{}@link BinarySearchTreeIterator\PYGdefaultZcb{} implementation.}
\PYGdefault{c+cm}{ * }
\PYGdefault{c+cm}{ * @author Thomas Herzog \PYGdefaultZlt{}thomas.herzog@students.fh\PYGdefaultZhy{}hagenberg.at\PYGdefaultZgt{}}
\PYGdefault{c+cm}{ * @date May 27, 2015}
\PYGdefault{c+cm}{ */}
\PYGdefault{n+nd}{@RunWith}\PYGdefault{o}{(}\PYGdefault{n}{Parameterized}\PYGdefault{o}{.}\PYGdefault{n+na}{class}\PYGdefault{o}{)}
\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{class} \PYGdefault{n+nc}{IteratorValidTest} \PYGdefault{k+kd}{extends} \PYGdefault{n}{AbstractConsoleLoggingTest} \PYGdefault{o}{\PYGdefaultZob{}}

	\PYGdefault{n+nd}{@Parameter}
	\PYGdefault{k+kd}{public} \PYGdefault{n}{TestData} \PYGdefault{n}{testData}\PYGdefault{o}{;}

	\PYGdefault{n+nd}{@Parameters}
	\PYGdefault{k+kd}{public} \PYGdefault{k+kd}{static} \PYGdefault{k+kd}{final} \PYGdefault{n}{List}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Object}\PYGdefault{o}{[]\PYGdefaultZgt{}} \PYGdefault{n+nf}{getTestParameters}\PYGdefault{o}{()} \PYGdefault{o}{\PYGdefaultZob{}}
		\PYGdefault{k+kd}{final} \PYGdefault{n}{Object}\PYGdefault{o}{[][]} \PYGdefault{n}{parameters} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{Object}\PYGdefault{o}{[}\PYGdefault{n}{TestCase}\PYGdefault{o}{.}\PYGdefault{n+na}{values}\PYGdefault{o}{().}\PYGdefault{n+na}{length}\PYGdefault{o}{][}\PYGdefault{l+m+mi}{1}\PYGdefault{o}{];}
		\PYGdefault{k+kt}{int} \PYGdefault{n}{idx} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{o}{;}
		\PYGdefault{k}{for} \PYGdefault{o}{(}\PYGdefault{n}{TestCase} \PYGdefault{n}{testCase} \PYGdefault{o}{:} \PYGdefault{n}{TestCase}\PYGdefault{o}{.}\PYGdefault{n+na}{values}\PYGdefault{o}{())} \PYGdefault{o}{\PYGdefaultZob{}}
			\PYGdefault{n}{parameters}\PYGdefault{o}{[}\PYGdefault{n}{idx}\PYGdefault{o}{][}\PYGdefault{l+m+mi}{0}\PYGdefault{o}{]} \PYGdefault{o}{=} \PYGdefault{n}{BinarySearchTreeTestDataProducer}
					\PYGdefault{o}{.}\PYGdefault{n+na}{createTestData}\PYGdefault{o}{(}\PYGdefault{n}{testCase}\PYGdefault{o}{);}
			\PYGdefault{n}{idx}\PYGdefault{o}{++;}
		\PYGdefault{o}{\PYGdefaultZcb{}}
		\PYGdefault{k}{return} \PYGdefault{n}{Arrays}\PYGdefault{o}{.}\PYGdefault{n+na}{asList}\PYGdefault{o}{(}\PYGdefault{n}{parameters}\PYGdefault{o}{);}
	\PYGdefault{o}{\PYGdefaultZcb{}}

	\PYGdefault{n+nd}{@Test}
	\PYGdefault{k+kd}{public} \PYGdefault{k+kt}{void} \PYGdefault{n+nf}{valid}\PYGdefault{o}{()} \PYGdefault{o}{\PYGdefaultZob{}}
		\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{} Given \PYGdefaultZhy{}\PYGdefaultZhy{}}
		\PYGdefault{k+kd}{final} \PYGdefault{n}{Iterator}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{n}{it} \PYGdefault{o}{=} \PYGdefault{k}{new} \PYGdefault{n}{BinarySearchTreeIterator}\PYGdefault{o}{\PYGdefaultZlt{}}\PYGdefault{n}{Integer}\PYGdefault{o}{\PYGdefaultZgt{}(}
				\PYGdefault{n}{testData}\PYGdefault{o}{.}\PYGdefault{n+na}{root}\PYGdefault{o}{);}

		\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{} When \PYGdefaultZhy{}\PYGdefaultZhy{}}
		\PYGdefault{k}{for} \PYGdefault{o}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{o}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{testData}\PYGdefault{o}{.}\PYGdefault{n+na}{orderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{size}\PYGdefault{o}{();} \PYGdefault{n}{i}\PYGdefault{o}{++)} \PYGdefault{o}{\PYGdefaultZob{}}
			\PYGdefault{c+c1}{// \PYGdefaultZhy{}\PYGdefaultZhy{} Then \PYGdefaultZhy{}\PYGdefaultZhy{}}
			\PYGdefault{n}{assertEquals}\PYGdefault{o}{(}\PYGdefault{n}{testData}\PYGdefault{o}{.}\PYGdefault{n+na}{orderedValues}\PYGdefault{o}{.}\PYGdefault{n+na}{get}\PYGdefault{o}{(}\PYGdefault{n}{i}\PYGdefault{o}{),} \PYGdefault{n}{it}\PYGdefault{o}{.}\PYGdefault{n+na}{next}\PYGdefault{o}{());}
		\PYGdefault{o}{\PYGdefaultZcb{}}
	\PYGdefault{o}{\PYGdefaultZcb{}}
\PYGdefault{o}{\PYGdefaultZcb{}}
\end{Verbatim}
